# This is what I use to pass USB devices into pods
# - tested and works with the specific devices noted
#

# Change group of ZWave - Aeotec ZStick 5 - to 1000
SUBSYSTEM=="tty", ATTRS{idVendor}=="0658", ATTRS{idProduct}=="0200", OWNER="1000", GROUP="1000"

# Change group of Zigbee - Conbee II - to 1000
SUBSYSTEM=="tty", ATTRS{idVendor}=="1cf1", ATTRS{idProduct}=="0030", OWNER="1000", GROUP="1000"

# Change group of Zigbee - zzh - to 1000
SUBSYSTEM=="tty", ATTRS{idVendor}=="1a86", ATTRS{idProduct}=="7523", OWNER="1000", GROUP="1000"

# Create a HARDLINK (TODO: confirm we can't pass a symlink into a pod)
#
# Note - kernel assigned names can't be reassigned, but we can hardlink
# We have to "ln -f" and "rm -f".  Note that udev manages re-symlinking if
# multiple devices match.  We don't do that, so just expect only one of
# any device.  We can use serial # later if we end up having dupes
#
# - these seem to need DRIVERS=="usb" in order to make $attr available
#
# General rule on ADD only (will not recreate hardlink on a rescan/change)
ACTION=="add", KERNEL=="ttyACM?", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", DRIVERS=="usb", RUN+="/usr/bin/ln /dev/ttyACM%n /dev/ttyACM-$attr{idVendor}-$attr{idProduct}"
ACTION=="add", KERNEL=="ttyUSB?", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", DRIVERS=="usb", RUN+="/usr/bin/ln /dev/ttyUSB%n /dev/ttyUSB-$attr{idVendor}-$attr{idProduct}"

# Cleanup rule
ACTION=="remove", KERNEL=="ttyACM?", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", DRIVERS=="usb", RUN+="/usr/bin/rm -f /dev/ttyACM-$attr{idVendor}-$attr{idProduct}"
ACTION=="remove", KERNEL=="ttyUSB?", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", DRIVERS=="usb", RUN+="/usr/bin/rm -f /dev/ttyUSB-$attr{idVendor}-$attr{idProduct}"


